1:"$Sreact.fragment"
2:I[8173,["554","static/chunks/554-f7e05cca95f6e4cf.js","974","static/chunks/app/page-ba70c813af333555.js"],""]
3:I[7970,["554","static/chunks/554-f7e05cca95f6e4cf.js","329","static/chunks/329-1daadcf11d52bf74.js","177","static/chunks/app/layout-c2088afa18e3637e.js"],"Image"]
4:I[5244,[],""]
5:I[3866,[],""]
8:I[6213,[],"OutletBoundary"]
a:I[6213,[],"MetadataBoundary"]
c:I[6213,[],"ViewportBoundary"]
e:I[4835,[],""]
:HL["https://mrkpatchaa.com/_next/static/css/11bc8cf0d69572b6.css","style"]
:HL["https://mrkpatchaa.com/_next/static/css/02f8d329ac16b0ad.css","style"]
0:{"P":null,"b":"mdb6mxdZeP7sIMQnvuReU","p":"https://mrkpatchaa.com","c":["","read","customizing-github-copilot-commit-messages"],"i":false,"f":[[["",{"children":["read",{"children":[["slug","customizing-github-copilot-commit-messages","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"https://mrkpatchaa.com/_next/static/css/11bc8cf0d69572b6.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"children":["$","div",null,{"className":"min-h-screen","children":["$","div",null,{"className":"container mx-auto px-5","children":[["$","div",null,{"className":"mb-10 mt-8 flex flex-row flex-nowrap items-center justify-between md:mb-20","children":[["$","div",null,{"className":"flex flex-row flex-nowrap items-center justify-end","children":[["$","h2",null,{"className":"relative mr-4 h-8 w-16 leading-none","children":["$","$L2",null,{"href":"/","className":"icon relative inline-block h-8 w-16","children":["$","$L3",null,{"src":"/assets/mrk.svg","alt":"M√©d√©d√© Raymond KPATCHAA","fill":true,"sizes":"100vw","className":"w-full object-contain"}]}]}],["$","$L2",null,{"href":"/digest","className":"mr-4 flex text-neutral-900 underline underline-offset-4","children":[["$","span",null,{"className":"hidden md:inline","children":"Weekly¬†"}],"Digests"]}],["$","$L2",null,{"href":"/about","className":"text-neutral-900 underline underline-offset-4","children":"About"}]]}],["$","nav",null,{"className":"flex flex-row flex-nowrap justify-end","children":[["$","a",null,{"href":"https://github.com/mrkpatchaa","target":"_blank","rel":"noopener noreferrer","children":["$","span",null,{"className":"inline-flex h-8 w-12 items-center justify-center","children":["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":32,"height":32,"fill":"#263238","viewBox":"0 0 256 256","transform":"$undefined","children":[false,"$undefined",["$","path",null,{"d":"M208.31,75.68A59.78,59.78,0,0,0,202.93,28,8,8,0,0,0,196,24a59.75,59.75,0,0,0-48,24H124A59.75,59.75,0,0,0,76,24a8,8,0,0,0-6.93,4,59.78,59.78,0,0,0-5.38,47.68A58.14,58.14,0,0,0,56,104v8a56.06,56.06,0,0,0,48.44,55.47A39.8,39.8,0,0,0,96,192v8H72a24,24,0,0,1-24-24A40,40,0,0,0,8,136a8,8,0,0,0,0,16,24,24,0,0,1,24,24,40,40,0,0,0,40,40H96v16a8,8,0,0,0,16,0V192a24,24,0,0,1,48,0v40a8,8,0,0,0,16,0V192a39.8,39.8,0,0,0-8.44-24.53A56.06,56.06,0,0,0,216,112v-8A58.14,58.14,0,0,0,208.31,75.68ZM200,112a40,40,0,0,1-40,40H112a40,40,0,0,1-40-40v-8a41.74,41.74,0,0,1,6.9-22.48A8,8,0,0,0,80,73.83a43.81,43.81,0,0,1,.79-33.58,43.88,43.88,0,0,1,32.32,20.06A8,8,0,0,0,119.82,64h32.35a8,8,0,0,0,6.74-3.69,43.87,43.87,0,0,1,32.32-20.06A43.81,43.81,0,0,1,192,73.83a8.09,8.09,0,0,0,1,7.65A41.72,41.72,0,0,1,200,104Z"}]]}]}]}],["$","a",null,{"href":"https://twitter.com/mrkpatchaa","target":"_blank","rel":"noopener noreferrer","children":["$","span",null,{"className":"inline-flex h-8 w-12 items-center justify-center","children":["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":32,"height":32,"fill":"#000000","viewBox":"0 0 256 256","transform":"$undefined","children":[false,"$undefined",["$","path",null,{"d":"M214.75,211.71l-62.6-98.38,61.77-67.95a8,8,0,0,0-11.84-10.76L143.24,99.34,102.75,35.71A8,8,0,0,0,96,32H48a8,8,0,0,0-6.75,12.3l62.6,98.37-61.77,68a8,8,0,1,0,11.84,10.76l58.84-64.72,40.49,63.63A8,8,0,0,0,160,224h48a8,8,0,0,0,6.75-12.29ZM164.39,208,62.57,48h29L193.43,208Z"}]]}]}]}],["$","a",null,{"href":"https://linkedin.com/in/mrkpatchaa","target":"_blank","rel":"noopener noreferrer","children":["$","span",null,{"className":"inline-flex h-8 w-12 items-center justify-center","children":["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":32,"height":32,"fill":"#0077B5","viewBox":"0 0 256 256","transform":"$undefined","children":[false,"$undefined",["$","path",null,{"d":"M216,24H40A16,16,0,0,0,24,40V216a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V40A16,16,0,0,0,216,24Zm0,192H40V40H216V216ZM96,112v64a8,8,0,0,1-16,0V112a8,8,0,0,1,16,0Zm88,28v36a8,8,0,0,1-16,0V140a20,20,0,0,0-40,0v36a8,8,0,0,1-16,0V112a8,8,0,0,1,15.79-1.78A36,36,0,0,1,184,140ZM100,84A12,12,0,1,1,88,72,12,12,0,0,1,100,84Z"}]]}]}]}]]}]]}],["$","main",null,{"children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],"$L6"],"forbidden":"$undefined","unauthorized":"$undefined"}]}]]}]}]}]}]]}],{"children":["read",["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","read","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","customizing-github-copilot-commit-messages","d"],["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","read","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L7",[["$","link","0",{"rel":"stylesheet","href":"https://mrkpatchaa.com/_next/static/css/02f8d329ac16b0ad.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L8",null,{"children":"$L9"}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","8pdi51pDv3_bWtKFyTiF1",{"children":[["$","$La",null,{"children":"$Lb"}],["$","$Lc",null,{"children":"$Ld"}],null]}]]}],false]],"m":"$undefined","G":["$e","$undefined"],"s":false,"S":true}
6:["$","h1",null,{"children":"404"}]
f:I[6754,["720","static/chunks/720-5435b75ccff1e0c5.js","226","static/chunks/226-c38ddf866647c82a.js","229","static/chunks/app/read/%5Bslug%5D/page-2ceb083a69bd7871.js"],"default"]
10:I[4831,["720","static/chunks/720-5435b75ccff1e0c5.js","226","static/chunks/226-c38ddf866647c82a.js","229","static/chunks/app/read/%5Bslug%5D/page-2ceb083a69bd7871.js"],"default"]
11:T10e1,<p>Writing structured commit messages improves code history readability, but manually crafting them can be time-consuming. With <strong>GitHub Copilot in VS Code</strong>, you can now <strong>automate commit message generation</strong>‚Äîand even customize Copilot‚Äôs suggestions.</p>
<p>In this post, I‚Äôll show you how to configure GitHub Copilot to follow your preferred commit style using <strong>a configuration file or direct settings instructions</strong>.</p>
<h3>üöÄ Using GitHub Copilot for Commit Messages in VS Code</h3>
<p>GitHub Copilot can generate commit messages even if you haven‚Äôt staged your changes.</p>
<p>Here‚Äôs how to use it:</p>
<ol>
<li><strong>Ensure GitHub Copilot is installed</strong> in VS Code.</li>
<li>Open the <strong>Source Control panel</strong> (<code>Cmd + Shift + G</code>).</li>
<li>Click in the <strong>commit message input box</strong>‚ÄîCopilot will suggest a commit message.</li>
<li>Press <code>Cmd + Enter</code> to accept and commit the suggestion.</li>
</ol>
<blockquote>
<p><strong>Tip:</strong> If the suggestion isn't ideal, press <code>Cmd + I</code> to cycle through alternatives.</p>
</blockquote>
<h3>üìù Customizing GitHub Copilot‚Äôs Commit Message Generation</h3>
<p>By default, GitHub Copilot generates <strong>Conventional Commits</strong> (e.g., <code>feat:</code>, <code>fix:</code>, <code>docs:</code>). However, you can <strong>customize its behavior</strong> in two ways:</p>
<ol>
<li><strong>Using a configuration file</strong> (<code>.copilot-commit-message-instructions.md</code>).</li>
<li><strong>Directly entering instructions in VS Code settings</strong>.</li>
</ol>
<h4>üîß Method 1: Using a Configuration File</h4>
<p>Create a file named <strong><code>.copilot-commit-message-instructions.md</code></strong> in your project‚Äôs root directory and define the commit message format inside:</p>
<pre><code class="language-md">The first line should be a single line summary with no more than 50 characters.
The second line should be blank.
Start the full summary on the third line. The body should be no longer than 100 characters.
</code></pre>
<p>Then, tell Copilot to use this file by adding this setting in <strong>VS Code settings.json</strong>:</p>
<pre><code class="language-json">"github.copilot.chat.commitMessageGeneration.instructions": [
    {
      "file": ".copilot-commit-message-instructions.md"
    }
]
</code></pre>
<h4>üîß Method 2: Entering Instructions Directly in VS Code Settings</h4>
<p>Instead of using a file, you can specify the instructions directly in the settings:</p>
<pre><code class="language-json">"github.copilot.chat.commitMessageGeneration.instructions": [
    {
      "text": "Use conventional commit message format. Keep the first line under 50 characters."
    }
]
</code></pre>
<p>Or combine both approaches:</p>
<pre><code class="language-json">"github.copilot.chat.commitMessageGeneration.instructions": [
    {
      "file": ".copilot-commit-message-instructions.md"
    },
    {
      "text": "Use conventional commit message format."
    }
]
</code></pre>
<p>While Copilot‚Äôs commit message generation is useful, it <strong>cannot yet include dynamic information</strong> (e.g., issue numbers, branch names) as highlighted in <a href="https://github.com/microsoft/vscode-copilot-release/issues/3522">this GitHub issue</a>.</p>
<p>For now, if you need dynamic elements in your commit messages, you‚Äôll have to <strong>manually edit the suggestions</strong> before committing.</p>
<h3>üî• Example: Copilot-Generated Commit Messages</h3>
<p>With the above configuration, Copilot might generate commit messages like this:</p>
<pre><code class="language-bash">fix: resolve authentication issue

Updated token validation logic to prevent expired token errors.
</code></pre>
<p>This format improves <strong>readability and consistency</strong> across your commits.</p>
<h3>‚ö° Final Thoughts</h3>
<p>GitHub Copilot‚Äôs commit message generation can <strong>save time and enforce consistency</strong> in your workflow. Whether you specify instructions in a file or directly in VS Code settings, you can guide Copilot to generate better commit messages.</p>
<blockquote>
<p><em>ü§ñ Fun fact: This post got a little AI assistance‚Äîjust like Copilot with commit messages!</em> üòé</p>
</blockquote>
7:["$","article",null,{"children":[["$","$Lf",null,{"title":"Customizing GitHub Copilot in VS Code for Better Commit Messages","date":"2025-01-29T19:40:55Z"}],["$","$L10",null,{"content":"$11"}]]}]
d:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
b:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Customizing GitHub Copilot in VS Code for Better Commit Messages | M√©d√©d√© Raymond KPATCHAA, a learner's blog"}],["$","meta","2",{"name":"description","content":"M√©d√©d√© Raymond KPATCHAA, a learner's blog"}],["$","link","3",{"rel":"author","href":"https://github.com/mrkpatchaa"}],["$","meta","4",{"name":"author","content":"mrkpatchaa"}],["$","meta","5",{"name":"keywords","content":"mrkpatchaa,M√©d√©d√© Raymond KPATCHAA"}],["$","meta","6",{"name":"creator","content":"mrkpatchaa"}],["$","link","7",{"rel":"canonical","href":"undefined/read/customizing-github-copilot-commit-messages"}],["$","meta","8",{"property":"og:title","content":"Customizing GitHub Copilot in VS Code for Better Commit Messages"}],["$","meta","9",{"property":"og:description","content":"M√©d√©d√© Raymond KPATCHAA, a learner's blog"}],["$","meta","10",{"property":"og:site_name","content":"M√©d√©d√© Raymond KPATCHAA, a learner's blog"}],["$","meta","11",{"property":"og:locale","content":"en_US"}],["$","meta","12",{"property":"og:type","content":"website"}],["$","meta","13",{"name":"twitter:card","content":"summary"}],["$","meta","14",{"name":"twitter:title","content":"Customizing GitHub Copilot in VS Code for Better Commit Messages"}],["$","meta","15",{"name":"twitter:description","content":"M√©d√©d√© Raymond KPATCHAA, a learner's blog"}],["$","link","16",{"rel":"icon","href":"/favicon.ico"}]]
9:null
